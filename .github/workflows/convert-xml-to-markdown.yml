name: Convert XML to Markdown
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Checkout Docusaurus
        uses: actions/checkout@v4
        with:
          repository: Pantagrueliste/CavrianaCorr_FrontEnd
          path: CavrianaCorr_FrontEnd
          token: ${{ secrets.DOCUSAURUS_REPO_SECRET }}

      - name: Download Saxon
        run: |
          wget -O saxon.jar https://repo1.maven.org/maven2/net/sf/saxon/Saxon-HE/10.6/Saxon-HE-10.6.jar

      - name: Create docs folder
        run: mkdir -p CavrianaCorr_FrontEnd/docs

      - name: Convert XML to Markdown by Year
        run: |
          set -e
          for file in letters/*.xml; do
            if [[ "$file" != "letters/persNames.xml" && "$file" != "letters/placeNames.xml" ]]; then
              if [ -f "$file" ]; then
                echo "Processing $file"
                filename=$(basename "$file")

                # Query for substring of @when, preventing xml declaration
                yearRaw=$(
                  java -cp saxon.jar net.sf.saxon.Query \
                    -qs:"declare namespace tei='http://www.tei-c.org/ns/1.0';
                         declare option saxon:output 'omit-xml-declaration=yes';
                         substring(doc('$file')/tei:TEI/tei:teiHeader/tei:profileDesc/tei:correspDesc/tei:correspAction[@type='sent']/tei:date/@when,1,4)" \
                    2>&1
                )

                # Keep only the 4-digit year at start of the line:
                year="$(echo "$yearRaw" | grep -Eo '^[0-9]{4}' || true)"
                if [ -z "$year" ]; then
                  year="unknownYear"
                fi

                mkdir -p "CavrianaCorr_FrontEnd/docs/$year"
                output_file="CavrianaCorr_FrontEnd/docs/$year/${filename%.*}.md"

                echo "Converting $file -> $output_file (year=$year)"
                java -cp saxon.jar net.sf.saxon.Transform \
                  -s:"$file" \
                  -xsl:"transform.xsl" \
                  -o:"$output_file"

                if [ $? -ne 0 ]; then
                  echo "Error converting $file"
                  exit 1
                fi
              fi
            fi
          done

      - name: Commit and push changes
        run: |
          cd CavrianaCorr_FrontEnd
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs/
          git diff --cached --quiet || git commit -m "Update converted Markdown files"
          git push origin main
