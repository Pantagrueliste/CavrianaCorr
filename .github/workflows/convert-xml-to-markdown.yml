name: Convert XML to Markdown

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Check out Docusaurus repository
        uses: actions/checkout@v4
        with:
          repository: Pantagrueliste/CavrianaCorr_FrontEnd
          path: CavrianaCorr_FrontEnd
          token: ${{ secrets.DOCUSAURUS_REPO_SECRET }}

      - name: Download Saxon
        run: |
          wget -O saxon.jar https://repo1.maven.org/maven2/net/sf/saxon/Saxon-HE/10.6/Saxon-HE-10.6.jar

      - name: Create docs folder
        run: mkdir -p CavrianaCorr_FrontEnd/docs

      - name: Convert XML to Markdown by Year
        run: |
          for file in ./letters/*.xml; do
            if [[ "$file" != "./letters/persNames.xml" && "$file" != "./letters/placeNames.xml" ]]; then
              if [ -f "$file" ]; then
                echo "Processing $file"
                filename=$(basename -- "$file")

                # Extract the first 4 digits of the @when attribute (the year).
                # We'll temporarily store it in variable "year".
                year=$(
                  java -cp saxon.jar net.sf.saxon.Query -qs:"
                    declare namespace tei='http://www.tei-c.org/ns/1.0';
                    substring(doc('$file')/tei:TEI/tei:teiHeader/tei:profileDesc/tei:correspDesc/tei:correspAction[@type='sent']/tei:date/@when,1,4)
                  " 2>/dev/null
                )

                # If year is empty, fallback to 'unknownYear'
                if [ -z "$year" ]; then
                  year="unknownYear"
                fi

                # Create a folder named after the year
                mkdir -p "CavrianaCorr_FrontEnd/docs/$year"

                # Construct the output file path in that year folder
                output_file="CavrianaCorr_FrontEnd/docs/$year/${filename%.*}.md"

                echo "Converting $file into $output_file (year=$year)"

                java -cp saxon.jar net.sf.saxon.Transform \
                  -s:"$file" \
                  -xsl:"transform.xsl" \
                  -o:"$output_file"

                if [ $? -ne 0 ]; then
                  echo "Error converting $file"
                  exit 1
                fi
              fi
            fi
          done

      - name: Commit and push changes
        run: |
          cd CavrianaCorr_FrontEnd
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add docs/
          git diff --cached --quiet || git commit -m "Update converted Markdown files"
          git push origin main
